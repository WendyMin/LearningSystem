// @flow
/*
**   Antinux Innovation
**   Author: Eric Deng
*/
import React from 'react';
import { bindActionCreators } from 'redux';
import { connect } from 'react-redux';
import * as actionCreators from 'actions';
import Button from 'UI/Button';

import Question from 'UI/SingleQuestion';

import AppearUD from 'Animation/AppearUD';

import changeAlpToNum from 'Algorithm/changeAlpToNum';

import style from 'style';

class SingleSubjectTest extends React.PureComponent {
  static defaultProps = {
    questionSize: {
      width: '60%',
      left: '20%',
      top: '100px'
    }
  }

  render(){
    const {
      questions,
      setChoice_,
      questionSize,
      submiter,
      loader,
      autoNext,
      level,
      index,
      lockAndShow
    } = this.props;
    console.log(questions)

    var question = {
      choosed : questions[level][index].choosed,
      questionId: questions[level][index].id,
      question: questions[level][index].question,
      options: questions[level][index].option,
      analysis: questions[level][index].analysis,
      rightKey: changeAlpToNum( questions[level][index].answer ),  //need to changge ABC to 123s
      lock: questions[level][index].lock,
      show: questions[level][index].show
    }


    return (
      <div className="container" style={questionSize}>
        <h1>{level}</h1>
        <Question
          {...question}
          onSetChoice={ cid => {
              autoNext( cid , 10000 );
            }
          }

        />
      </div>
    );
  }

};

export default connect(
  ({ SingleSubjectTest: ownState }) => ({
    questions: ownState.content,
    loadingData: ownState.loadingData,
    level: ownState.nowAt.level,
    index: ownState.nowAt.index,
  }),
  dispatch => bindActionCreators( actionCreators , dispatch )
)( SingleSubjectTest );
