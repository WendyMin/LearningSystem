import React from 'react';
import { connect } from 'react-redux';
import { bindActionCreators } from 'redux';
import { Prompt } from 'react-router';
import style from 'style';

import LoginForm from 'UI/LoginForm';

import protect from 'HOC/protect';
import asyncProcessControl from 'HOC/asyncProcessControl';
import makePage from 'HOC/makePage';
import applyHOCs from 'HOC/applyHOCs';

class Login extends React.PureComponent {

  constructor( props ){
    super( props );

    //this.whetherIntroductionShow = [true,false,false,false];//whetherIntroductionShow[0]:english ; whetherIntroductionShow[1]:logic ;
                                                            //whetherIntroductionShow[2]:write ; whetherIntroductionShow[3]:math ;
    //this.subject = ["英语科目" , "逻辑科目" , "写作科目" , "数学科目"];
    //this.introduction = ["英语科目简介" , "逻辑科目简介" , "写作科目简介" , "数学科目简介"];
    //this.useIntroduction = ["英语学习部分分为测试、学习、复习三个部分" , "逻辑学习部分分为测试、学习、复习三个部分" ,
                            //"写作学习部分分为测试、学习、复习三个部分" , "数学学习部分分为测试、学习、复习三个部分"];
  }

  //showIntroduction = (num) => {
    //this.whetherIntroductionShow[num] = true;
  //}

  //hideIntroduction = (num) => {
  //  this.whetherIntroductionShow[num] = false;
//  }

  render(){

    //var i = 0;
    //var TextStyle = [];
    //for (var i = 0 ; i < this.whetherIntroductionShow.length ; i++){
    //  if(this.whetherIntroductionShow[i]){
      //  TextStyle[i] = style.chosedText;
    //  }
    //  else{
    //    TextStyle[i] = style.normalText;
    //  }
    //}

    return (
      <React.Fragment>
        <div className = {style.wholePage}>

          <div className={style.HUD}>
            <div className={style.loginOrSignup}>
              <a href = "/login"> 登录 </a> <a>&nbsp;&nbsp;&nbsp;</a>
              <a href = "/login"> 注册 </a>
            </div>
          </div>

          <div className = {style.login}>
            <LoginForm/>
          </div>

              {/*this.whetherIntroductionShow.map((whetherShow , key) =>
                {if(whetherShow){
                  return(<div key = {key} className = {style.subjectIntroduction}>
                  <div className = {style.title}>{this.introduction[0]}</div>
                  <div className = {style.brifIntroduction}>{this.useIntroduction[0]}</div>
                </div>)
              }}

              )

        */  }


        </div>
      </React.Fragment>
    );
  }
};

export default applyHOCs([
  asyncProcessControl({
  }),
  protect({
    logined: {
      satisfy: l => l === true,
      block: ({ openWindow , history, closeMask , openMask }) => {
        openWindow( UserManagerWindow,
          {
            width: '380px',
            height: '300px',
            position: {
              top: 'calc( 50% - 190px)',
              left: 'calc( 50% - 150px)'
            },
            onCancel: () => history.goBack() || closeMask(),
            onSuccess: closeMask,
          }
        );
        openMask();
      }
    }
  }),
  makePage,
  connect(
    state => ({
      logined: state.UserManager.logined,
      username: state.UserManager.name,
    }),
    dispatch => ({
      //...bindActionCreators( ButtonExpandActions , dispatch),
    })
  )],
  Login
);
